#summary PROMS Documentation
#labels Featured,Phase-Design

= Introduction =

This document will explain how the microcode will be stored in PROMS


= Details =

In order to maintain the circuitry regarding the Control part simpler M1 uses the microcode stored in PROMS in this way you gain more flexibility. M1 uses 5 Proms(U1,U2,U3,U4,U5) chips forming a 40 bit microinstruction.

[http://i219.photobucket.com/albums/cc244/leonardoaraujo/PromsCircuitry.png]

Taking a look to the schematic we can easily observe each prom forming the control signals to be decoded.

|| *PROM name* || *PROM hex filename* || *Signals created* ||
|| U1 || prom4.hex || ALUOP_SZ, ALUOP(0..1), USE_CARRY, LATCH_SZ, NEGATE_BR, RUSER_PTB, CODE_PTB ||
|| U2 || prom3.hex || EL(0..3), ER(0..1), RIMMVAL(0..1)||
|| U3 || prom2.hex || E_MDR_HI, PRIV, XL_MODE, XL_PAGING, MISC(0..3)||
|| U4 || prom1.hex || Latch(0..3) XL_MAR, XL_MDR_LO, XL_MDR_HI||
|| U5 || prom0.hex || Next(0..7)||

The signals are better explained in *[MicroinstructionBits here] *
These hex files are created with *[Prombits prombits.h]*

Here you can see the * [PROMHex PROM Hex listing]* in Intel Hex format. Those Hex files will be converted to VHDL using a tool called srecord [http://srecord.sourceforge.net/]

*srec_cat prom0.hex -Intel -o prom0.vhd -VHdl*

This will create an VHDL description of a PROM with the hex contents.

[http://code.google.com/p/fpga-magic-1/source/browse/trunk/prom0.vhd]